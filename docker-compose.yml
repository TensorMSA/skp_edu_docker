version: '3'
services:
  db:
    image: postgres:latest
    env_file: .env
    volumes:
      - pg_data:/var/lib/postgresql/data/
  web:
    image: hoyai/tf_edu_docker_skp:v1.2
    env_file: .env
    volumes:
      - ./code:/home/dev/tensormsa
      - ./code/static:/static
      - ./hoya_src_root:/hoya_src_root
      - ./hoya_str_root:/hoya_str_root
      - ./hoya_model_root:/hoya_model_root
    command: bash -c "(gunicorn tfrest.wsgi -b 0.0.0.0:8000 &)&&(flower -A hoyai &)&&(/run_vnc.sh &)&&/run_jupyter.sh;" 
    ports:
      - "8888:8888"
      - "8989:8989"
      - "5555:5555"
      - "5901:5901"
    depends_on:
      - db
  nginx:
    image: nginx:latest
    ports:
      - "8000:8000"
    volumes:
      - ./code:/home/dev/tensormsa
      - ./config/nginx:/etc/nginx/conf.d
      - ./code/static:/static
    depends_on:
      - web
    env_file: .env
  rabbit:
    hostname: rabbit
    image: rabbitmq:latest
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=mypass
    depends_on:
      - web
    ports:
      - "5672:5672"  # we forward this port because it's useful for debugging
      - "15672:15672"  # here, we can access rabbitmq management plugin
  celery:
    image: hoyai/tf_edu_docker_skp:v1.2
    volumes:
      - ./code:/home/dev/tensormsa
      - ./hoya_src_root:/hoya_src_root
      - ./hoya_str_root:/hoya_str_root
      - ./hoya_model_root:/hoya_model_root
    #command: bash -c "(/home/dev/tensormsa/celery -A hoyai -l info &);"
    depends_on:
      - rabbit
volumes:
    pg_data:
     external: true
